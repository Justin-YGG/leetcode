===================================
26. 删除排序数组中的重复项
===================================

https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/

给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。

不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。

示例 1:
::

    给定数组 nums = [1,1,2],

    函数应该返回新的长度 2, 并且原数组 nums 的前两个元素被修改为 1, 2。

    你不需要考虑数组中超出新长度后面的元素。

示例 2:
::

    给定 nums = [0,0,1,1,1,2,2,3,3,4],

    函数应该返回新的长度 5, 并且原数组 nums 的前五个元素被修改为 0, 1, 2, 3, 4。

    你不需要考虑数组中超出新长度后面的元素。

-------------------------------------------

双指针法

从数组下标1开始，与前值比较，慢指针记录记录排序数组重复元素的第一个位置，值不同时，慢指针后移一个位置，用当前位置覆盖重复元素，
注意**重复元素也要保留一个**；如果整个数组没有重复元素，相当于遍历一遍数组，自己给自己赋值

.. note::

    - 时间复杂度：O(n)
    - 空间复杂度：O(1)

-------------------------------------------

.. code::  python

    class Solution(object):
        def removeDuplicates(self, nums):
            """
            :type nums: List[int]
            :rtype: int
            """
            p = 0
            for i in range(1, len(nums)):
                if nums[i] == nums[i-1]:
                   continue
                else:
                    p += 1
                    nums[p] = nums[i]
            # 题目要求返回的是长度，所有坐标要加 1
            return p + 1