Search.setIndex({"docnames": ["collections/binary-search", "collections/index", "collections/sort", "index", "lcci/04.05", "lcci/index", "leetcode/c++/1", "leetcode/c++/841", "leetcode/c++/index", "leetcode/go/index", "leetcode/index", "leetcode/python/3Sum", "leetcode/python/Reverse-Words-in-a-String", "leetcode/python/TwoSum", "leetcode/python/add-two-numbers", "leetcode/python/add-two-numbers-ii", "leetcode/python/balanced-binary-tree", "leetcode/python/best-time-to-buy-and-sell-stock", "leetcode/python/best-time-to-buy-and-sell-stock-ii", "leetcode/python/binary-tree-level-order-traversal", "leetcode/python/binary-tree-maximum-path-sum", "leetcode/python/binary-tree-right-side-view", "leetcode/python/binary-tree-zigzag-level-order-traversal", "leetcode/python/check-completeness-of-a-binary-tree", "leetcode/python/climbing-stairs", "leetcode/python/coin-change", "leetcode/python/construct-binary-tree-from-preorder-and-inorder-traversal", "leetcode/python/container-with-most-water", "leetcode/python/convert-sorted-array-to-binary-search-tree", "leetcode/python/degree-of-an-array", "leetcode/python/diameter-of-binary-tree", "leetcode/python/dp", "leetcode/python/edit-distance", "leetcode/python/fibonacci-number", "leetcode/python/first-missing-positive", "leetcode/python/generate-parentheses", "leetcode/python/house-robber", "leetcode/python/house-robber-ii", "leetcode/python/house-robber-iii", "leetcode/python/implement-queue-using-stacks", "leetcode/python/implement-stack-using-queues", "leetcode/python/implement-trie-prefix-tree", "leetcode/python/index", "leetcode/python/intersection-of-two-linked-lists", "leetcode/python/invert-binary-tree", "leetcode/python/kth-largest-element-in-a-stream", "leetcode/python/kth-largest-element-in-an-array", "leetcode/python/largest-rectangle-in-histogram", "leetcode/python/linked-list-cycle", "leetcode/python/linked-list-cycle-ii", "leetcode/python/longest-common-prefix", "leetcode/python/longest-palindromic-substring", "leetcode/python/longest-substring-without-repeating-characters", "leetcode/python/lowest-common-ancestor-of-a-binary-search-tree", "leetcode/python/lowest-common-ancestor-of-a-binary-tree", "leetcode/python/lru-cache", "leetcode/python/majority-element", "leetcode/python/maximum-depth-of-binary-tree", "leetcode/python/merge-intervals", "leetcode/python/merge-k-sorted-lists", "leetcode/python/merge-sorted-array", "leetcode/python/merge-two-sorted-lists", "leetcode/python/middle-of-the-linked-list", "leetcode/python/min-stack", "leetcode/python/minimum-depth-of-binary-tree", "leetcode/python/minimum-path-sum", "leetcode/python/minimum-size-subarray-sum", "leetcode/python/minimum-window-substring", "leetcode/python/move-zeroes", "leetcode/python/n-ary-tree-level-order-traversal", "leetcode/python/ongest-increasing-subsequence", "leetcode/python/permutations", "leetcode/python/plus-one", "leetcode/python/remove-duplicates-from-sorted-array", "leetcode/python/remove-duplicates-from-sorted-list", "leetcode/python/remove-duplicates-from-sorted-list-ii", "leetcode/python/reorder-list", "leetcode/python/reverse-linked-list", "leetcode/python/reverse-nodes-in-k-group", "leetcode/python/rotate-array", "leetcode/python/search-in-rotated-sorted-array", "leetcode/python/search-in-rotated-sorted-array-ii", "leetcode/python/single-number", "leetcode/python/sliding-window-maximum", "leetcode/python/swap-nodes-in-pairs", "leetcode/python/template", "leetcode/python/third-maximum-number", "leetcode/python/trapping-rain-water", "leetcode/python/two-sum-ii-input-array-is-sorted", "leetcode/python/valid-parentheses", "leetcode/python/validate-binary-search-tree", "offer/03", "offer/05", "offer/06", "offer/07", "offer/09", "offer/10", "offer/50", "offer/index"], "filenames": ["collections/binary-search.rst", "collections/index.rst", "collections/sort.rst", "index.rst", "lcci/04.05.rst", "lcci/index.rst", "leetcode/c++/1.rst", "leetcode/c++/841.rst", "leetcode/c++/index.rst", "leetcode/go/index.rst", "leetcode/index.rst", "leetcode/python/3Sum.rst", "leetcode/python/Reverse-Words-in-a-String.rst", "leetcode/python/TwoSum.rst", "leetcode/python/add-two-numbers.rst", "leetcode/python/add-two-numbers-ii.rst", "leetcode/python/balanced-binary-tree.rst", "leetcode/python/best-time-to-buy-and-sell-stock.rst", "leetcode/python/best-time-to-buy-and-sell-stock-ii.rst", "leetcode/python/binary-tree-level-order-traversal.rst", "leetcode/python/binary-tree-maximum-path-sum.rst", "leetcode/python/binary-tree-right-side-view.rst", "leetcode/python/binary-tree-zigzag-level-order-traversal.rst", "leetcode/python/check-completeness-of-a-binary-tree.rst", "leetcode/python/climbing-stairs.rst", "leetcode/python/coin-change.rst", "leetcode/python/construct-binary-tree-from-preorder-and-inorder-traversal.rst", "leetcode/python/container-with-most-water.rst", "leetcode/python/convert-sorted-array-to-binary-search-tree.rst", "leetcode/python/degree-of-an-array.rst", "leetcode/python/diameter-of-binary-tree.rst", "leetcode/python/dp.rst", "leetcode/python/edit-distance.rst", "leetcode/python/fibonacci-number.rst", "leetcode/python/first-missing-positive.rst", "leetcode/python/generate-parentheses.rst", "leetcode/python/house-robber.rst", "leetcode/python/house-robber-ii.rst", "leetcode/python/house-robber-iii.rst", "leetcode/python/implement-queue-using-stacks.rst", "leetcode/python/implement-stack-using-queues.rst", "leetcode/python/implement-trie-prefix-tree.rst", "leetcode/python/index.rst", "leetcode/python/intersection-of-two-linked-lists.rst", "leetcode/python/invert-binary-tree.rst", "leetcode/python/kth-largest-element-in-a-stream.rst", "leetcode/python/kth-largest-element-in-an-array.rst", "leetcode/python/largest-rectangle-in-histogram.rst", "leetcode/python/linked-list-cycle.rst", "leetcode/python/linked-list-cycle-ii.rst", "leetcode/python/longest-common-prefix.rst", "leetcode/python/longest-palindromic-substring.rst", "leetcode/python/longest-substring-without-repeating-characters.rst", "leetcode/python/lowest-common-ancestor-of-a-binary-search-tree.rst", "leetcode/python/lowest-common-ancestor-of-a-binary-tree.rst", "leetcode/python/lru-cache.rst", "leetcode/python/majority-element.rst", "leetcode/python/maximum-depth-of-binary-tree.rst", "leetcode/python/merge-intervals.rst", "leetcode/python/merge-k-sorted-lists.rst", "leetcode/python/merge-sorted-array.rst", "leetcode/python/merge-two-sorted-lists.rst", "leetcode/python/middle-of-the-linked-list.rst", "leetcode/python/min-stack.rst", "leetcode/python/minimum-depth-of-binary-tree.rst", "leetcode/python/minimum-path-sum.rst", "leetcode/python/minimum-size-subarray-sum.rst", "leetcode/python/minimum-window-substring.rst", "leetcode/python/move-zeroes.rst", "leetcode/python/n-ary-tree-level-order-traversal.rst", "leetcode/python/ongest-increasing-subsequence.rst", "leetcode/python/permutations.rst", "leetcode/python/plus-one.rst", "leetcode/python/remove-duplicates-from-sorted-array.rst", "leetcode/python/remove-duplicates-from-sorted-list.rst", "leetcode/python/remove-duplicates-from-sorted-list-ii.rst", "leetcode/python/reorder-list.rst", "leetcode/python/reverse-linked-list.rst", "leetcode/python/reverse-nodes-in-k-group.rst", "leetcode/python/rotate-array.rst", "leetcode/python/search-in-rotated-sorted-array.rst", "leetcode/python/search-in-rotated-sorted-array-ii.rst", "leetcode/python/single-number.rst", "leetcode/python/sliding-window-maximum.rst", "leetcode/python/swap-nodes-in-pairs.rst", "leetcode/python/template.rst", "leetcode/python/third-maximum-number.rst", "leetcode/python/trapping-rain-water.rst", "leetcode/python/two-sum-ii-input-array-is-sorted.rst", "leetcode/python/valid-parentheses.rst", "leetcode/python/validate-binary-search-tree.rst", "offer/03.rst", "offer/05.rst", "offer/06.rst", "offer/07.rst", "offer/09.rst", "offer/10.rst", "offer/50.rst", "offer/index.rst"], "titles": ["\u4e8c\u5206\u67e5\u627e", "\u5408\u96c6", "\u6392\u5e8f\u7b97\u6cd5\u603b\u7ed3", "Practice makes perfect", "\u5408\u6cd5\u4e8c\u53c9\u641c\u7d22\u6811", "\u7a0b\u5e8f\u5458\u9762\u8bd5\u91d1\u5178", "1. \u4e24\u6570\u4e4b\u548c", "841. \u94a5\u5319\u548c\u623f\u95f4", "C++", "Golang", "LeetCode", "15. \u4e09\u6570\u4e4b\u548c", "151.\u7ffb\u8f6c\u5b57\u7b26\u4e32\u91cc\u7684\u5355\u8bcd", "1.\u4e24\u6570\u4e4b\u548c", "2. \u4e24\u6570\u76f8\u52a0", "445. \u4e24\u6570\u76f8\u52a0 II", "110. \u5e73\u8861\u4e8c\u53c9\u6811", "121. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a", "122. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a II", "102. \u4e8c\u53c9\u6811\u7684\u5c42\u6b21\u904d\u5386", "124. \u4e8c\u53c9\u6811\u4e2d\u7684\u6700\u5927\u8def\u5f84\u548c", "199. \u4e8c\u53c9\u6811\u7684\u53f3\u89c6\u56fe", "103. \u4e8c\u53c9\u6811\u7684\u952f\u9f7f\u5f62\u5c42\u6b21\u904d\u5386", "958. \u4e8c\u53c9\u6811\u7684\u5b8c\u5168\u6027\u68c0\u9a8c", "70. \u722c\u697c\u68af", "322. \u96f6\u94b1\u5151\u6362", "105. \u4ece\u524d\u5e8f\u4e0e\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811", "11. \u76db\u6700\u591a\u6c34\u7684\u5bb9\u5668", "108. \u5c06\u6709\u5e8f\u6570\u7ec4\u8f6c\u6362\u4e3a\u4e8c\u53c9\u641c\u7d22\u6811", "697. \u6570\u7ec4\u7684\u5ea6", "543. \u4e8c\u53c9\u6811\u7684\u76f4\u5f84", "\u52a8\u6001\u89c4\u5212 Dynamic Programming", "72. \u7f16\u8f91\u8ddd\u79bb", "509. \u6590\u6ce2\u90a3\u5951\u6570", "41. \u7f3a\u5931\u7684\u7b2c\u4e00\u4e2a\u6b63\u6570", "22. \u62ec\u53f7\u751f\u6210", "198. \u6253\u5bb6\u52ab\u820d", "213. \u6253\u5bb6\u52ab\u820d II", "337. \u6253\u5bb6\u52ab\u820d III", "232. \u7528\u6808\u5b9e\u73b0\u961f\u5217", "225. \u7528\u961f\u5217\u5b9e\u73b0\u6808", "208. \u5b9e\u73b0 Trie (\u524d\u7f00\u6811)", "Python", "160. \u76f8\u4ea4\u94fe\u8868", "226. \u7ffb\u8f6c\u4e8c\u53c9\u6811", "703. \u6570\u636e\u6d41\u4e2d\u7684\u7b2cK\u5927\u5143\u7d20", "215. \u6570\u7ec4\u4e2d\u7684\u7b2cK\u4e2a\u6700\u5927\u5143\u7d20", "84. \u67f1\u72b6\u56fe\u4e2d\u6700\u5927\u7684\u77e9\u5f62", "141. \u73af\u5f62\u94fe\u8868", "142. \u73af\u5f62\u94fe\u8868 II", "14. \u6700\u957f\u516c\u5171\u524d\u7f00", "5. \u6700\u957f\u56de\u6587\u5b50\u4e32", "3. \u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32", "235. \u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148", "236. \u4e8c\u53c9\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148", "146. LRU\u7f13\u5b58\u673a\u5236", "169. \u591a\u6570\u5143\u7d20", "104. \u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6", "56. \u5408\u5e76\u533a\u95f4", "23. \u5408\u5e76K\u4e2a\u6392\u5e8f\u94fe\u8868", "88. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4", "21. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868", "876. \u94fe\u8868\u7684\u4e2d\u95f4\u7ed3\u70b9", "155. \u6700\u5c0f\u6808", "111. \u4e8c\u53c9\u6811\u7684\u6700\u5c0f\u6df1\u5ea6", "64. \u6700\u5c0f\u8def\u5f84\u548c", "209. \u957f\u5ea6\u6700\u5c0f\u7684\u5b50\u6570\u7ec4", "76. \u6700\u5c0f\u8986\u76d6\u5b50\u4e32", "283. \u79fb\u52a8\u96f6", "429. N\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386", "300. \u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217", "46. \u5168\u6392\u5217", "66. \u52a0\u4e00", "26. \u5220\u9664\u6392\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879", "83. \u5220\u9664\u6392\u5e8f\u94fe\u8868\u4e2d\u7684\u91cd\u590d\u5143\u7d20", "82. \u5220\u9664\u6392\u5e8f\u94fe\u8868\u4e2d\u7684\u91cd\u590d\u5143\u7d20 II", "143. \u91cd\u6392\u94fe\u8868", "206. \u53cd\u8f6c\u94fe\u8868", "25. K \u4e2a\u4e00\u7ec4\u7ffb\u8f6c\u94fe\u8868", "189. \u65cb\u8f6c\u6570\u7ec4", "33. \u641c\u7d22\u65cb\u8f6c\u6392\u5e8f\u6570\u7ec4", "81. \u641c\u7d22\u65cb\u8f6c\u6392\u5e8f\u6570\u7ec4 II", "136. \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57", "239. \u6ed1\u52a8\u7a97\u53e3\u6700\u5927\u503c", "24. \u4e24\u4e24\u4ea4\u6362\u94fe\u8868\u4e2d\u7684\u8282\u70b9", "\u6a21\u677f", "414. \u7b2c\u4e09\u5927\u7684\u6570", "42. \u63a5\u96e8\u6c34", "167. \u4e24\u6570\u4e4b\u548c II - \u8f93\u5165\u6709\u5e8f\u6570\u7ec4", "20. \u6709\u6548\u7684\u62ec\u53f7", "98. \u9a8c\u8bc1\u4e8c\u53c9\u641c\u7d22\u6811", "\u9762\u8bd5\u989803. \u6570\u7ec4\u4e2d\u91cd\u590d\u7684\u6570\u5b57", "\u9762\u8bd5\u989805. \u66ff\u6362\u7a7a\u683c", "\u9762\u8bd5\u989806. \u4ece\u5c3e\u5230\u5934\u6253\u5370\u94fe\u8868", "\u9762\u8bd5\u989807. \u91cd\u5efa\u4e8c\u53c9\u6811", "\u9762\u8bd5\u989809. \u7528\u4e24\u4e2a\u6808\u5b9e\u73b0\u961f\u5217", "\u9762\u8bd5\u989810- I. \u6590\u6ce2\u90a3\u5951\u6570\u5217", "\u9762\u8bd5\u989850. \u7b2c\u4e00\u4e2a\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u5b57\u7b26", "\u5251\u6307 Offer"], "terms": {"mid": [0, 2, 28, 59, 80, 81], "left": [0, 2, 4, 16, 19, 20, 21, 22, 23, 26, 28, 30, 35, 38, 44, 51, 52, 53, 54, 57, 59, 64, 66, 67, 76, 78, 80, 81, 90, 94], "right": [0, 2, 4, 16, 19, 20, 21, 22, 23, 26, 28, 30, 35, 38, 44, 51, 52, 53, 54, 57, 59, 64, 66, 67, 76, 80, 81, 90, 94], "def": [0, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97], "binary_search": 0, "num": [0, 6, 11, 13, 28, 29, 34, 36, 37, 45, 46, 56, 66, 68, 70, 71, 73, 79, 80, 81, 82, 83, 86, 91], "length": [0, 2, 7, 11, 18, 29, 34, 46, 52, 72, 79, 80, 83], "len": [0, 2, 7, 11, 12, 22, 26, 27, 28, 32, 34, 36, 37, 40, 45, 46, 47, 50, 51, 52, 56, 58, 59, 63, 65, 66, 67, 70, 71, 72, 73, 76, 79, 80, 81, 82, 83, 87, 94], "if": [0, 2, 4, 6, 7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97], "return": [0, 2, 4, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97], "while": [0, 2, 11, 12, 14, 15, 19, 21, 23, 27, 34, 39, 40, 43, 44, 47, 48, 50, 51, 52, 59, 60, 61, 62, 66, 67, 69, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 87, 91, 93, 95], "elif": [0, 11, 53, 65, 80, 81, 86], "10": [0, 14, 15, 18, 20, 28, 45, 47, 58, 83, 98], "index": 0, "left_bound": 0, "els": [0, 2, 11, 14, 15, 22, 25, 27, 32, 43, 45, 51, 55, 57, 58, 59, 60, 61, 64, 65, 66, 67, 70, 72, 73, 74, 75, 80, 81, 83, 86, 89, 92], "right_bound": 0, "in": [2, 11, 12, 13, 17, 18, 19, 21, 24, 25, 26, 27, 29, 32, 33, 34, 36, 37, 38, 39, 41, 45, 46, 47, 50, 51, 54, 55, 56, 58, 60, 65, 67, 68, 69, 70, 71, 73, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 94, 97], "place": [2, 60, 68, 76, 79], "flag": [2, 23], "bubble_sort": 2, "array": [2, 29, 46, 60, 73, 79, 80, 81, 88], "for": [2, 4, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 41, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 56, 57, 58, 59, 61, 62, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 97], "rang": [2, 24, 25, 27, 32, 33, 34, 36, 37, 45, 46, 47, 50, 51, 65, 70, 73, 78, 82, 83, 87], "fals": [2, 7, 16, 23, 39, 41, 48, 51, 81, 89, 90], "true": [2, 7, 16, 23, 41, 48, 51, 79, 81, 89, 90], "not": [2, 4, 12, 16, 20, 21, 22, 23, 24, 28, 29, 30, 33, 34, 37, 38, 39, 40, 41, 45, 48, 50, 51, 53, 54, 55, 57, 59, 60, 61, 64, 66, 68, 76, 78, 79, 86, 87, 89, 93, 95], "n2": 2, "insertion_sort": 2, "key": [2, 7, 55, 58], "and": [2, 7, 11, 12, 16, 17, 18, 26, 34, 35, 39, 40, 41, 45, 47, 48, 50, 51, 53, 54, 55, 58, 59, 61, 62, 63, 74, 75, 76, 78, 83, 84, 87, 89, 95], "selection_sort": 2, "min_idx": 2, "over": 2, "tmp": [2, 18, 47, 75, 76, 77, 78, 79], "append": [2, 4, 11, 12, 15, 19, 21, 22, 23, 35, 39, 40, 47, 58, 63, 69, 71, 76, 83, 87, 89, 90, 92, 93, 95], "float": [2, 17, 18, 20, 25, 29, 63, 66, 67], "inf": [2, 17, 18, 20, 25, 29, 63, 66, 67], "merge_sort": 2, "nlogn": [2, 11], "logn": 2, "partit": 2, "pivot": [2, 80, 94], "low": 2, "high": 2, "quick_sort": 2, "arrari": 2, "https": [4, 6, 7, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97], "leetcod": [4, 6, 7, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97], "cn": [4, 6, 7, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97], "com": [4, 6, 7, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97], "problem": [4, 6, 7, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97], "legal": 4, "binari": [4, 16, 19, 20, 21, 22, 23, 26, 28, 30, 38, 44, 53, 54, 57, 64, 90, 94], "search": [4, 41, 53, 80, 81, 90], "tree": [4, 16, 19, 20, 21, 22, 23, 26, 28, 30, 38, 41, 44, 53, 54, 57, 64, 69, 90, 94], "lcci": 4, "definit": [4, 14, 15, 16, 19, 20, 21, 23, 26, 28, 30, 38, 43, 44, 48, 53, 54, 57, 59, 61, 62, 64, 69, 74, 75, 76, 77, 78, 84, 90, 93, 94], "node": [4, 16, 19, 20, 21, 23, 26, 28, 30, 38, 41, 43, 44, 53, 54, 55, 57, 64, 69, 78, 84, 90, 93, 94], "class": [4, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97], "treenod": [4, 16, 19, 20, 21, 22, 23, 26, 28, 30, 38, 44, 53, 54, 57, 64, 90, 94], "object": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97], "__init__": [4, 14, 15, 16, 19, 20, 21, 23, 24, 26, 28, 30, 33, 38, 39, 40, 41, 43, 44, 45, 48, 53, 54, 55, 57, 59, 61, 62, 63, 64, 69, 71, 74, 75, 76, 77, 78, 84, 90, 93, 94, 95], "self": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97], "val": [4, 14, 15, 16, 19, 20, 21, 22, 23, 26, 28, 30, 38, 43, 44, 45, 48, 53, 54, 55, 57, 59, 61, 62, 64, 69, 74, 75, 76, 77, 78, 84, 90, 93, 94], "none": [4, 14, 15, 16, 19, 20, 21, 23, 26, 28, 30, 38, 39, 40, 41, 43, 44, 48, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 68, 69, 74, 75, 76, 77, 78, 79, 84, 86, 90, 93, 94, 95], "solut": [4, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 97], "isvalidbst": [4, 90], "root": [4, 16, 19, 20, 21, 22, 23, 26, 30, 38, 41, 44, 53, 54, 57, 64, 69, 90, 94], "type": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97], "rtype": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97], "bool": [4, 7, 16, 23, 39, 40, 41, 48, 81, 89, 90], "inord": [4, 26, 90, 94], "sort": [4, 11, 58, 59, 60, 61, 73, 74, 75, 80, 81, 88, 90], "set": [4, 90], "two": [6, 13, 15, 43, 61, 78, 88], "sum": [6, 13, 20, 65, 66, 88], "target": [6, 13, 80, 81, 88], "11": [6, 10, 13, 25, 34, 42, 88], "15": [6, 10, 13, 16, 19, 20, 26, 42, 57, 58, 64, 88, 94], "public": [6, 7], "vector": [6, 7], "int": [6, 7, 11, 13, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 52, 55, 56, 57, 58, 60, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 78, 79, 80, 81, 82, 83, 86, 87, 91, 93, 94, 95], "twosum": [6, 13], "size": [6, 7, 39, 40, 51, 55, 66], "unordered_map": 6, "count": [6, 7, 79], "room": 7, "1000": [7, 51, 69], "3000": 7, "void": 7, "dfs": [7, 20, 30, 35, 57], "cur": [7, 14, 35, 59, 74, 75, 76, 77, 78], "visit": 7, "canvisitallroom": 7, "841": [8, 10], "python": [10, 12, 33, 77], "dynam": [10, 42], "program": [10, 42], "14": [10, 42], "20": [10, 16, 19, 20, 26, 42, 57, 64, 92, 94], "21": [10, 42], "22": [10, 42], "23": [10, 42], "25": [10, 42], "24": [10, 42], "26": [10, 42], "33": [10, 42], "41": [10, 42], "42": [10, 20, 42], "46": [10, 42], "56": [10, 42], "64": [10, 42], "66": [10, 42], "70": [10, 42], "72": [10, 42], "76": [10, 42], "81": [10, 42], "ii": [10, 32, 42], "82": [10, 42], "83": [10, 42], "84": [10, 42], "88": [10, 42], "98": [10, 42], "102": [10, 42], "103": [10, 42], "104": [10, 42], "105": [10, 42], "108": [10, 42], "110": [10, 42], "111": [10, 42], "121": [10, 42], "122": [10, 42], "124": [10, 42], "136": [10, 42], "141": [10, 42], "142": [10, 42], "143": [10, 42], "146": [10, 42], "lru": [10, 42], "151": [10, 42], "155": [10, 42], "167": [10, 42], "160": [10, 42], "169": [10, 42], "189": [10, 42], "198": [10, 42], "199": [10, 42], "206": [10, 42], "208": [10, 42], "trie": [10, 42], "209": [10, 42], "213": [10, 42], "215": [10, 42], "225": [10, 42, 95], "226": [10, 42], "232": [10, 42], "235": [10, 42], "236": [10, 42], "239": [10, 42], "283": [10, 42], "300": [10, 42], "322": [10, 42], "337": [10, 42], "iii": [10, 42], "414": [10, 42], "429": [10, 42], "445": [10, 42], "509": [10, 42, 96], "543": [10, 42], "697": [10, 42], "703": [10, 42], "876": [10, 42], "958": [10, 42], "golang": 10, "3sum": 11, "nlog": 11, "threesum": 11, "list": [11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 25, 26, 27, 28, 29, 34, 35, 36, 37, 39, 40, 43, 45, 46, 47, 48, 49, 50, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 91, 93, 94], "res": [11, 12, 19, 21, 22, 25, 35, 36, 38, 51, 52, 66, 69, 83, 87], "xrang": [11, 12], "break": [11, 50, 76, 79, 87], "skip": [11, 32], "the": [11, 12, 39, 40, 41, 43, 57, 62, 78, 85], "same": [11, 78], "valu": [11, 29, 43, 55, 95], "continu": [11, 12, 23, 25, 65, 68, 71, 73, 86], "revers": [12, 76, 77, 78, 79, 85], "word": [12, 32, 41], "string": 12, "sky": 12, "is": [12, 39, 40, 41, 48, 78, 86, 88], "blue": 12, "hello": 12, "world": 12, "good": 12, "exampl": 12, "strip": 12, "split": 12, "reverseword": 12, "str": [12, 32, 35, 41, 50, 51, 52, 67, 89, 92, 97], "join": [12, 92], "s_list": 12, "reverse_str": 12, "reverse_word": 12, "strip_sid": 12, "strip_spac": 12, "isspac": 12, "enumer": [13, 26, 29, 68, 91, 94], "342": 14, "465": 14, "807": 14, "singl": [14, 15, 43, 48, 59, 61, 62, 74, 75, 76, 77, 78, 82, 84, 93], "link": [14, 15, 43, 48, 49, 59, 61, 62, 74, 75, 76, 77, 78, 84, 93], "listnod": [14, 15, 43, 48, 55, 59, 61, 62, 74, 75, 76, 77, 78, 84, 93], "next": [14, 15, 43, 48, 55, 59, 61, 62, 74, 75, 76, 77, 78, 84, 93], "addtwonumb": [14, 15], "l1": [14, 15, 59, 61, 76], "l2": [14, 15, 59, 61, 76], "pre": [14, 55, 59, 76, 77, 78, 79, 84], "carri": [14, 15], "or": [14, 15, 48, 51, 54, 59, 60, 61, 78, 86, 87], "sum_": [14, 15, 20, 66], "add": [15, 45], "number": [15, 33, 57, 78, 82, 86, 88], "push_stack": 15, "stack": [15, 23, 39, 40, 44, 47, 63, 78, 87, 89, 93], "stack1": 15, "stack2": 15, "dummi": [15, 75], "pop": [15, 23, 39, 40, 44, 47, 55, 63, 71, 83, 87, 89, 95], "new_nod": 15, "balanc": 16, "null": [16, 19, 20, 21, 28, 38, 54, 57, 62, 64, 77, 78, 90, 95], "isbalanc": 16, "abs": 16, "helper": [16, 22], "max": [16, 17, 18, 20, 27, 29, 30, 36, 37, 38, 47, 52, 57, 58, 64, 70], "best": [17, 18], "time": [17, 18], "to": [17, 18, 39, 40, 57, 78], "buy": [17, 18], "sell": [17, 18], "stock": [17, 18], "maxprofit": [17, 18], "price": [17, 18], "dp_i_0": [17, 18], "dp_i_1": [17, 18, 36, 37], "level": [19, 22, 26, 69, 85, 93, 94], "order": [19, 22, 69], "travers": [19, 22, 26, 69], "levelord": [19, 69], "ani": [19, 39, 41, 69], "maximum": [20, 57, 83, 86], "path": [20, 57, 65], "xiang": 20, "xi": 20, "tong": 20, "su": 20, "de": [20, 27, 91, 97], "si": 20, "lu": 20, "fen": [20, 81], "duo": 20, "jie": [20, 27, 81, 87], "fa": [20, 26, 27, 81, 87, 94], "by": [20, 27, 62], "30": [20, 33], "maxpathsum": 20, "side": 21, "view": 21, "rightsideview": 21, "queue": [21, 39, 40], "nxt": 21, "zigzag": 22, "zigzaglevelord": 22, "depth": [22, 30, 57, 64], "insert": [22, 41, 72], "check": [23, 78], "complet": 23, "of": [23, 29, 30, 39, 40, 43, 53, 54, 57, 62, 64, 78], "2h": 23, "iscompletetre": 23, "climb": [24, 68], "stair": [24, 68], "dic": [24, 33, 34, 97], "climbstair": 24, "dp": [24, 25, 31, 32, 33, 36, 37, 38, 70], "base": [24, 25, 32, 50], "case": [24, 25, 32], "coin": 25, "chang": 25, "amount": 25, "min": [25, 27, 29, 32, 63, 64, 65, 66, 87], "tabl": [25, 31, 33], "coinchang": 25, "memo": [25, 32, 36, 38], "dict": [25, 29, 32, 82, 97], "sub": 25, "construct": 26, "from": [26, 39, 40, 57, 73, 74, 75, 78, 83], "preorder": [26, 94], "5000": [26, 69, 94], "zhong": [26, 91, 94], "jian": [26, 87, 94], "er": [26, 81, 94], "cha": [26, 94], "shu": [26, 91, 94], "lcof": [26, 91, 92, 93, 94, 95, 97], "mian": [26, 94], "shi": [26, 27, 62, 81, 87, 94, 95], "ti": [26, 92, 94], "07": [26, 98], "di": [26, 94, 97], "gui": [26, 94], "qin": [26, 94], "hashmap": [26, 94], "log_2": [26, 94], "buildtre": [26, 94], "inorder_dict": [26, 94], "recur": [26, 93, 94], "pre_root": [26, 94], "in_left": [26, 94], "in_right": [26, 94], "termin": [26, 85, 93, 94], "drill": [26, 85, 93, 94], "down": [26, 85, 93, 94], "process": [26, 85, 93, 94], "current": [26, 79, 85, 93, 94], "contain": 27, "with": [27, 41, 43, 78], "most": 27, "water": [27, 87], "a1": 27, "a2": 27, "an": [27, 29, 46], "ai": 27, "49": [27, 29], "maxarea": 27, "height": [27, 30, 47, 57, 87], "max_area": 27, "zhi": [27, 62, 87, 97], "guan": 27, "shuang": 27, "zhen": [27, 62, 87], "na": 27, "kong": [27, 87, 92], "sortedarraytobst": 28, "construt_tre": 28, "degre": 29, "50": [29, 98], "000": 29, "999": 29, "findshortestsubarray": 29, "map1": 29, "map2": 29, "map3": 29, "get": [29, 39, 40, 52, 55, 56, 67, 82, 97], "min_len": [29, 67], "item": [29, 82], "diamet": 30, "diameterofbinarytre": 30, "left_depth": 30, "left_dia": 30, "right_depth": 30, "right_dia": 30, "labuladong": 31, "gitbook": 31, "io": 31, "edit": 32, "distanc": 32, "word1": 32, "word2": 32, "hors": 32, "ros": 32, "rors": 32, "rose": 32, "intent": 32, "execut": 32, "inent": 32, "enent": 32, "exent": 32, "exect": 32, "idp": 32, "mindist": 32, "length1": 32, "length2": 32, "fibonacci": 33, "fib": 33, "0th": 33, "nth": 33, "first": [34, 78, 86], "miss": 34, "posit": [34, 91], "12": [34, 36, 68], "firstmissingposit": 34, "swap": [34, 84], "index_i": 34, "index_j": 34, "generat": 35, "parenthes": [35, 89], "generateparenthesi": 35, "hous": [36, 37, 38], "robber": [36, 37, 38], "rob": [36, 37, 38], "start": [36, 37, 41, 67, 78, 79], "dp_i_2": [36, 37], "dp_i": [36, 37], "end": [37, 79], "do_it": 38, "not_do_it": 38, "implement": [39, 40, 41], "use": [39, 40, 78], "push": [39, 40, 63, 83], "peek": [39, 40], "empti": [39, 40], "myqueu": 39, "new": [39, 41, 45, 55, 63], "top": [39, 40, 45, 46, 63], "dequ": [39, 40, 83], "initi": [39, 40, 41, 63], "your": [39, 40, 41, 45, 55, 63, 95], "data": [39, 40, 41, 63, 85], "structur": [39, 40, 41, 63], "here": [39, 40, 41, 63], "in_stack": 39, "out_stack": 39, "element": [39, 40, 46, 56], "back": [39, 40], "remov": [39, 40, 55, 73, 74, 75, 83], "front": [39, 40], "that": [39, 40, 41, 78], "whether": [39, 40], "will": [39, 40, 41, 45, 55, 63, 95], "be": [39, 40, 41, 45, 55, 63, 95], "instanti": [39, 40, 41, 45, 55, 63, 95], "call": [39, 40, 41, 45, 55, 63, 78, 95], "as": [39, 40, 41, 45, 55, 63, 78, 95], "such": [39, 40, 41, 45, 55, 63, 95], "obj": [39, 40, 41, 45, 55, 63, 95], "param_2": [39, 40, 41, 95], "param_3": [39, 40, 41, 63], "param_4": [39, 40, 63], "collect": [40, 83], "import": [40, 45, 46, 83], "mystack": 40, "onto": 40, "q_len": 40, "popleft": [40, 83], "on": [40, 57], "prefix": [41, 50], "startswith": 41, "appl": 41, "app": 41, "end_of_word": 41, "into": [41, 78], "char": 41, "setdefault": 41, "there": [41, 78], "given": 41, "intersect": 43, "c1": 43, "intersectv": 43, "lista": 43, "listb": 43, "skipa": 43, "skipb": 43, "refer": 43, "getintersectionnod": 43, "heada": 43, "headb": 43, "head1": 43, "head_a": 43, "head_b": 43, "invert": 44, "descript": 44, "inverttre": 44, "extend": 44, "kthlargest": 45, "arr": 45, "heapq": [45, 46], "heap": 45, "heappush": [45, 46], "heapreplac": [45, 46], "param_1": [45, 55], "kth": 46, "largest": [46, 47], "findkthlargest": 46, "rectangl": 47, "histogram": 47, "largestrectanglearea": 47, "area": 47, "cycl": [48, 49], "pos": 48, "head": [48, 55, 61, 62, 74, 75, 76, 77, 78, 84, 93], "lbyl": 48, "hascycl": 48, "slow": [48, 62, 76], "fast": [48, 62, 76], "eafp": 48, "tri": 48, "except": 48, "longest": [50, 52, 57, 70], "common": [50, 53, 54], "flower": 50, "flow": 50, "flight": 50, "fl": 50, "dog": 50, "racecar": 50, "car": 50, "longestcommonprefix": 50, "strs": 50, "babad": 51, "bab": 51, "aba": 51, "cbbd": 51, "bb": 51, "longestpalindrom": 51, "max_len": 51, "is_valid": 51, "odd": 51, "odd_len": 51, "spread_from_cent": 51, "even": 51, "even_len": 51, "max_sub": 51, "substr": [52, 67], "without": 52, "repeat": 52, "charact": 52, "abcabcbb": 52, "abc": [52, 67], "bbbbb": 52, "pwwkew": 52, "wke": 52, "pwke": 52, "lengthoflongestsubstr": 52, "window": [52, 67, 83], "lowest": [53, 54], "ancestor": [53, 54], "lowestcommonancestor": [53, 54], "rootroot": 54, "pp": 54, "qq": 54, "leftleft": 54, "rightright": 54, "cach": 55, "put": 55, "lrucach": 55, "linkedlist": 55, "tail": 55, "add_first": 55, "get_last": 55, "capac": 55, "last": 55, "major": 56, "majorityel": 56, "iteritem": 56, "bt": 57, "edg": 57, "leaf": 57, "left_tre": 57, "right_tre": 57, "log": [57, 66, 80], "maxdepth": 57, "one": [57, 72], "line": 57, "version": 57, "map": 57, "merg": [58, 59, 60, 61, 76], "interv": 58, "18": 58, "lambda": 58, "rs": [58, 82, 92, 93], "mergeklist": 59, "merge_two_list": 59, "nums1": 60, "nums2": 60, "num1": 60, "do": [60, 68, 76, 79], "anyth": [60, 68, 76, 79], "modifi": [60, 68, 76, 79], "instead": [60, 68, 76, 79], "mergetwolist": 61, "all": [61, 64], "ans": [62, 82], "100": [62, 79], "middl": 62, "kuai": 62, "man": 62, "zhu": [62, 81], "yao": 62, "zai": 62, "yu": 62, "diao": 62, "liwei": 62, "middlenod": 62, "getmin": 63, "minstack": 63, "tupl": 63, "properti": 63, "is_empti": 63, "minimum": [64, 65, 66, 67], "mindepth": 64, "minpathsum": 65, "grid": 65, "subarray": 66, "minsubarraylen": 66, "adobecodebanc": 67, "banc": 67, "minwindow": 67, "match": [67, 89], "length_": 67, "need": [67, 78, 85], "movezero": 68, "zero": 68, "ari": 69, "submiss": 69, "returned_valu": 69, "outer_loop1": 69, "inner_loop2": 69, "inner_loop3": 69, "optional_if": 69, "children": 69, "increas": 70, "subsequ": 70, "lengthofli": 70, "permut": 71, "result": 71, "backtrack": 71, "track": 71, "plus": 72, "123": 72, "4321": 72, "digit": 72, "pluson": 72, "duplic": [73, 74, 75], "removedupl": 73, "deletedupl": [74, 75], "reorder": 76, "l0": 76, "ln": 76, "reorderlist": 76, "node_list": 76, "middle_nod": 76, "find_middl": 76, "left_temp": 76, "right_temp": 76, "pr": 77, "reverselist": 77, "group": 78, "iter": 78, "it": 78, "becaus": 78, "each": 78, "function": 78, "we": [78, 92], "are": [78, 92], "input": [78, 88], "have": 78, "them": 78, "so": 78, "linear": 78, "scan": 78, "still": 78, "necessari": 78, "recurs": [78, 85], "take": 78, "cost": 78, "consider": 78, "everi": 78, "suppos": 78, "onc": 78, "total": 78, "within": 78, "coupl": 78, "pointer": 78, "onli": 78, "this": 78, "algorithm": 78, "they": 78, "constant": 78, "thus": 78, "space": 78, "complex": 78, "reversekgroup": 78, "node_a": 78, "node_b": 78, "new_head": 78, "rotat": [79, 80, 81], "99": 79, "next_": 79, "point": 80, "wo": 81, "tuo": 81, "xie": 81, "liao": 81, "xing": 81, "python3": 81, "singlenumb": 82, "slide": 83, "maxslidingwindow": 83, "pair": 84, "swappair": 84, "param1": 85, "param2": 85, "max_level": 85, "process_result": 85, "logic": 85, "p1": 85, "status": 85, "third": 86, "thirdmax": 86, "second": 86, "trap": 87, "rain": 87, "marco": 87, "fyi": 87, "www": 87, "cnblog": 87, "grandyang": 87, "8887985": 87, "html": 87, "bao": 87, "li": 87, "yi": [87, 97], "huan": [87, 92], "monoton": 87, "free": 87, "food": 87, "bottom_index": 87, "index1": 88, "index2": 88, "valid": [89, 90], "isvalid": 89, "zu": 91, "fu": [91, 97], "zi": [91, 97], "100000": 91, "findrepeatnumb": 91, "ball": 91, "ge": [92, 95, 97], "happi": 92, "20are": 92, "20happi": 92, "10000": [92, 93, 95], "replacespac": 92, "cong": 93, "wei": 93, "dao": 93, "tou": 93, "da": 93, "yin": 93, "lian": 93, "biao": 93, "reverseprint": 93, "yong": 95, "liang": 95, "zhan": 95, "xian": [95, 97], "dui": 95, "lie": 95, "appendtail": 95, "deletehead": 95, "cqueue": 95, "nn": 95, "chu": 97, "ci": 97, "firstuniqchar": 97, "03": 98, "05": 98, "06": 98, "09": 98}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"target": 0, "bubbl": 2, "sort": 2, "insert": 2, "select": 2, "merg": 2, "practic": 3, "make": 3, "perfect": 3, "indic": 3, "and": 3, "tabl": 3, "841": 7, "golang": 9, "leetcod": 10, "15": 11, "151": 12, "445": 15, "ii": [15, 18, 37, 49, 75, 81, 88], "110": 16, "121": 17, "122": 18, "102": 19, "124": 20, "199": 21, "103": 22, "958": 23, "70": 24, "322": 25, "105": 26, "11": 27, "108": 28, "697": 29, "543": 30, "dynam": 31, "program": 31, "72": 32, "509": 33, "41": 34, "22": 35, "198": 36, "213": 37, "337": 38, "iii": 38, "232": 39, "225": 40, "208": 41, "trie": 41, "python": 42, "160": 43, "226": 44, "703": 45, "215": 46, "84": 47, "141": 48, "142": 49, "14": 50, "235": 53, "236": 54, "146": 55, "lru": 55, "169": 56, "104": 57, "56": 58, "23": 59, "88": 60, "21": 61, "876": 62, "155": 63, "111": 64, "64": 65, "209": 66, "76": 67, "283": 68, "429": 69, "300": 70, "46": 71, "66": 72, "26": 73, "83": 74, "82": 75, "143": 76, "206": 77, "25": 78, "189": 79, "33": 80, "81": 81, "136": 82, "239": 83, "24": 84, "414": 86, "42": 87, "167": 88, "20": 89, "98": 90, "03": 91, "05": 92, "06": 93, "07": 94, "09": 95, "10": 96, "50": 97, "offer": 98}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"\u4e8c\u5206\u67e5\u627e": [[0, "id1"]], "\u67e5\u627e\u67d0\u4e2a\u76ee\u6807\u5143\u7d20": [[0, "id2"]], "\u67e5\u627e\u67d0\u4e2a\u76ee\u6807\u7b2c\u4e00\u4e2a\u6216\u5de6\u540e\u4e00\u4e2a\u51fa\u73b0\u7684\u4f4d\u7f6e": [[0, "id3"]], "\u67e5\u627e target \u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e": [[0, "target"]], "\u67e5\u627e target \u51fa\u73b0\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e": [[0, "id4"]], "\u5408\u96c6": [[1, "id1"]], "\u6392\u5e8f\u7b97\u6cd5\u603b\u7ed3": [[2, "id1"]], "\u57fa\u4e8e\u6bd4\u8f83\u7684\u7b97\u6cd5": [[2, "id2"]], "\u5192\u6ce1\u6392\u5e8f\uff08Bubble Sort\uff09": [[2, "bubble-sort"]], "\u63d2\u5165\u6392\u5e8f\uff08Insertion Sort\uff09": [[2, "insertion-sort"]], "\u9009\u62e9\u6392\u5e8f\uff08Selection Sort\uff09": [[2, "selection-sort"]], "\u5f52\u5e76\u6392\u5e8f\uff08Merge Sort\uff09": [[2, "merge-sort"]], "Merge": [[2, "merge"]], "Merge Sort": [[2, "id3"]], "\u5feb\u901f\u6392\u5e8f\uff08Merge Sort\uff09": [[2, "id4"]], "Practice makes perfect": [[3, "practice-makes-perfect"]], "Indices and tables": [[3, "indices-and-tables"]], "\u5408\u6cd5\u4e8c\u53c9\u641c\u7d22\u6811": [[4, "id1"]], "\u7a0b\u5e8f\u5458\u9762\u8bd5\u91d1\u5178": [[5, "id1"]], "1. \u4e24\u6570\u4e4b\u548c": [[6, "id1"]], "841. \u94a5\u5319\u548c\u623f\u95f4": [[7, "id1"]], "C++": [[8, "c"]], "Golang": [[9, "golang"]], "LeetCode": [[10, "leetcode"]], "15. \u4e09\u6570\u4e4b\u548c": [[11, "id1"]], "151.\u7ffb\u8f6c\u5b57\u7b26\u4e32\u91cc\u7684\u5355\u8bcd": [[12, "id1"]], "1.\u4e24\u6570\u4e4b\u548c": [[13, "id1"]], "2. \u4e24\u6570\u76f8\u52a0": [[14, "id1"]], "445. \u4e24\u6570\u76f8\u52a0 II": [[15, "ii"]], "110. \u5e73\u8861\u4e8c\u53c9\u6811": [[16, "id1"]], "121. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a": [[17, "id1"]], "122. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a II": [[18, "ii"]], "102. \u4e8c\u53c9\u6811\u7684\u5c42\u6b21\u904d\u5386": [[19, "id1"]], "124. \u4e8c\u53c9\u6811\u4e2d\u7684\u6700\u5927\u8def\u5f84\u548c": [[20, "id1"]], "199. \u4e8c\u53c9\u6811\u7684\u53f3\u89c6\u56fe": [[21, "id1"]], "103. \u4e8c\u53c9\u6811\u7684\u952f\u9f7f\u5f62\u5c42\u6b21\u904d\u5386": [[22, "id1"]], "958. \u4e8c\u53c9\u6811\u7684\u5b8c\u5168\u6027\u68c0\u9a8c": [[23, "id1"]], "70. \u722c\u697c\u68af": [[24, "id1"]], "322. \u96f6\u94b1\u5151\u6362": [[25, "id1"]], "105. \u4ece\u524d\u5e8f\u4e0e\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811": [[26, "id1"]], "11. \u76db\u6700\u591a\u6c34\u7684\u5bb9\u5668": [[27, "id1"]], "108. \u5c06\u6709\u5e8f\u6570\u7ec4\u8f6c\u6362\u4e3a\u4e8c\u53c9\u641c\u7d22\u6811": [[28, "id1"]], "697. \u6570\u7ec4\u7684\u5ea6": [[29, "id1"]], "543. \u4e8c\u53c9\u6811\u7684\u76f4\u5f84": [[30, "id1"]], "\u52a8\u6001\u89c4\u5212 Dynamic Programming": [[31, "dynamic-programming"]], "72. \u7f16\u8f91\u8ddd\u79bb": [[32, "id1"]], "509. \u6590\u6ce2\u90a3\u5951\u6570": [[33, "fibonacci-number"]], "41. \u7f3a\u5931\u7684\u7b2c\u4e00\u4e2a\u6b63\u6570": [[34, "id1"]], "22. \u62ec\u53f7\u751f\u6210": [[35, "id1"]], "198. \u6253\u5bb6\u52ab\u820d": [[36, "id1"]], "213. \u6253\u5bb6\u52ab\u820d II": [[37, "ii"]], "337. \u6253\u5bb6\u52ab\u820d III": [[38, "iii"]], "232. \u7528\u6808\u5b9e\u73b0\u961f\u5217": [[39, "id1"]], "225. \u7528\u961f\u5217\u5b9e\u73b0\u6808": [[40, "implement-stack-using-queues"]], "208. \u5b9e\u73b0 Trie (\u524d\u7f00\u6811)": [[41, "trie"]], "Python": [[42, "python"]], "160. \u76f8\u4ea4\u94fe\u8868": [[43, "id1"]], "226. \u7ffb\u8f6c\u4e8c\u53c9\u6811": [[44, "id1"]], "703. \u6570\u636e\u6d41\u4e2d\u7684\u7b2cK\u5927\u5143\u7d20": [[45, "k"]], "215. \u6570\u7ec4\u4e2d\u7684\u7b2cK\u4e2a\u6700\u5927\u5143\u7d20": [[46, "k"]], "84. \u67f1\u72b6\u56fe\u4e2d\u6700\u5927\u7684\u77e9\u5f62": [[47, "id1"]], "141. \u73af\u5f62\u94fe\u8868": [[48, "id1"]], "142. \u73af\u5f62\u94fe\u8868 II": [[49, "ii"]], "14. \u6700\u957f\u516c\u5171\u524d\u7f00": [[50, "id1"]], "5. \u6700\u957f\u56de\u6587\u5b50\u4e32": [[51, "id1"]], "3. \u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32": [[52, "id1"]], "235. \u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148": [[53, "id1"]], "236. \u4e8c\u53c9\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148": [[54, "id1"]], "146. LRU\u7f13\u5b58\u673a\u5236": [[55, "lru"]], "169. \u591a\u6570\u5143\u7d20": [[56, "id1"]], "104. \u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6": [[57, "id1"]], "56. \u5408\u5e76\u533a\u95f4": [[58, "id1"]], "23. \u5408\u5e76K\u4e2a\u6392\u5e8f\u94fe\u8868": [[59, "k"]], "88. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4": [[60, "id1"]], "21. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868": [[61, "id1"]], "876. \u94fe\u8868\u7684\u4e2d\u95f4\u7ed3\u70b9": [[62, "id1"]], "155. \u6700\u5c0f\u6808": [[63, "id1"]], "111. \u4e8c\u53c9\u6811\u7684\u6700\u5c0f\u6df1\u5ea6": [[64, "id1"]], "64. \u6700\u5c0f\u8def\u5f84\u548c": [[65, "id1"]], "209. \u957f\u5ea6\u6700\u5c0f\u7684\u5b50\u6570\u7ec4": [[66, "id1"]], "76. \u6700\u5c0f\u8986\u76d6\u5b50\u4e32": [[67, "id1"]], "283. \u79fb\u52a8\u96f6": [[68, "id1"]], "429. N\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386": [[69, "n"]], "300. \u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217": [[70, "id1"]], "46. \u5168\u6392\u5217": [[71, "id1"]], "66. \u52a0\u4e00": [[72, "id1"]], "26. \u5220\u9664\u6392\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879": [[73, "id1"]], "83. \u5220\u9664\u6392\u5e8f\u94fe\u8868\u4e2d\u7684\u91cd\u590d\u5143\u7d20": [[74, "id1"]], "82. \u5220\u9664\u6392\u5e8f\u94fe\u8868\u4e2d\u7684\u91cd\u590d\u5143\u7d20 II": [[75, "ii"]], "143. \u91cd\u6392\u94fe\u8868": [[76, "id1"]], "206. \u53cd\u8f6c\u94fe\u8868": [[77, "id1"]], "25. K \u4e2a\u4e00\u7ec4\u7ffb\u8f6c\u94fe\u8868": [[78, "k"]], "189. \u65cb\u8f6c\u6570\u7ec4": [[79, "id1"]], "33. \u641c\u7d22\u65cb\u8f6c\u6392\u5e8f\u6570\u7ec4": [[80, "id1"]], "81. \u641c\u7d22\u65cb\u8f6c\u6392\u5e8f\u6570\u7ec4 II": [[81, "ii"]], "136. \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57": [[82, "id1"]], "239. \u6ed1\u52a8\u7a97\u53e3\u6700\u5927\u503c": [[83, "id1"]], "24. \u4e24\u4e24\u4ea4\u6362\u94fe\u8868\u4e2d\u7684\u8282\u70b9": [[84, "id1"]], "\u6a21\u677f": [[85, "id1"]], "414. \u7b2c\u4e09\u5927\u7684\u6570": [[86, "id1"]], "42. \u63a5\u96e8\u6c34": [[87, "id1"]], "167. \u4e24\u6570\u4e4b\u548c II - \u8f93\u5165\u6709\u5e8f\u6570\u7ec4": [[88, "ii"]], "20. \u6709\u6548\u7684\u62ec\u53f7": [[89, "id1"]], "98. \u9a8c\u8bc1\u4e8c\u53c9\u641c\u7d22\u6811": [[90, "id1"]], "\u9762\u8bd5\u989803. \u6570\u7ec4\u4e2d\u91cd\u590d\u7684\u6570\u5b57": [[91, "id1"]], "\u9762\u8bd5\u989805. \u66ff\u6362\u7a7a\u683c": [[92, "id1"]], "\u9762\u8bd5\u989806. \u4ece\u5c3e\u5230\u5934\u6253\u5370\u94fe\u8868": [[93, "id1"]], "\u9762\u8bd5\u989807. \u91cd\u5efa\u4e8c\u53c9\u6811": [[94, "id1"]], "\u9762\u8bd5\u989809. \u7528\u4e24\u4e2a\u6808\u5b9e\u73b0\u961f\u5217": [[95, "id1"]], "\u9762\u8bd5\u989810- I. \u6590\u6ce2\u90a3\u5951\u6570\u5217": [[96, "i"]], "\u9762\u8bd5\u989850. \u7b2c\u4e00\u4e2a\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u5b57\u7b26": [[97, "id1"]], "\u5251\u6307 Offer": [[98, "offer"]]}, "indexentries": {}})